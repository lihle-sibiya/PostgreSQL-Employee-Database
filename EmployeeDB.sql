-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.employees
(

    CONSTRAINT emp_key PRIMARY KEY (emp_id),
    CONSTRAINT emp_dept_unique UNIQUE (emp_id, dept_id)
);

CREATE TABLE IF NOT EXISTS public.departments
(

    CONSTRAINT dept_key PRIMARY KEY (dept_id),
    CONSTRAINT dept_city_unique UNIQUE (dept, city)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id bigserial,
    role character varying,
    PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public.salaries
(
    salary_id bigserial,
    salary_pa integer,
    PRIMARY KEY (salary_id)
);

CREATE TABLE IF NOT EXISTS public.overtime_hours
(
    overtime_id bigserial,
    overtime_hours integer,
    PRIMARY KEY (overtime_id)
);

ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT employees_dept_id_fkey FOREIGN KEY (dept_id)
    REFERENCES public.departments (dept_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (emp_id)
    REFERENCES public.salaries (salary_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (emp_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.overtime_hours
    ADD FOREIGN KEY (overtime_id)
    REFERENCES public.employees (emp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

ALTER TABLE public.overtime_hours
ADD CONSTRAINT overtime_hours_emp_id_fkey FOREIGN KEY (overtime_id)
REFERENCES public.employees (emp_id)
MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION;

 --create index 
CREATE INDEX emp_id_idx ON employees (emp_id);
CREATE INDEX dept_id_idx ON departments (dept_id);
CREATE INDEX role_id_idx ON roles (role_id);
CREATE INDEX salary_id_idx ON salaries (salary_id);
CREATE INDEX overtime_id_idx ON overtime_hours (overtime_id);

SELECT * FROM employees

--Update Suzanne's salary in Employees
UPDATE employees
SET salary = 10000
WHERE first_name = 'Suzanne';


--Update last_name column
ALTER TABLE employees
RENAME COLUMN last_name TO surname;

--Add columns on Employees
ALTER TABLE employees
ADD COLUMN gender varchar(50),
ADD COLUMN address varchar(50),
ADD COLUMN email varchar(50),
ADD COLUMN role_id integer,
ADD COLUMN salary_id integer,
ADD COLUMN overtime_id integer;


UPDATE employees
SET 
gender = 'male', 
address = '15 Short Street, Newlands',
email = 'lee@abc.com'
WHERE emp_id = 2;

--Rename Overtime hours table
ALTER TABLE overtime hours RENAME TO overtime_hours;
ALTER TABLE departments
RENAME COLUMN city TO dept_city;

SELECT * FROM employees
SELECT * FROM departments
SELECT * FROM roles
SELECT * FROM salaries
SELECT * FROM overtime_hours

--add departments and city values from departments
INSERT INTO employees (overtime_id)
VALUES
  (1),
  (20),
  (21),
  (22),
  (26);
 
 --remove constraints
  ALTER TABLE overtime_hours
DROP CONSTRAINT overtime_hours_overtime_id_fkey;
--update values
UPDATE public.employees
SET dept_id = 4
   --salary_id = 1
WHERE emp_id = 2;

UPDATE public.employees
SET dept_id = 3
   --salary_id = 2
WHERE emp_id = 3;

UPDATE employees
SET gender = 'male',
    address = '200 Bhokwe Road, Bizana',
	email = 'soo@abc.com',
	salary_id = 3,
	role_id = 3
WHERE emp_id = 3;

UPDATE public.employees
SET gender = 'female',
    address = '35 Umlanjwana Street, Mpumalanga',
	email = 'janet@abc.com',
	salary_id = 4,
	role_id = 4
WHERE emp_id = 4;

UPDATE public.employees
SET gender = 'female',
    address = '190 Metsi Road, Centurion',
	email = 'suzanne@abc.com',
	salary_id = 5,
	role_id = 1
WHERE emp_id = 9;


--JOIN tables
SELECT
  e.first_name,
  e.surname,
  d.dept_name AS department_name,
  r.role AS job_title,
  s.salary_pa AS salary_figure,
  oh.overtime_hours AS overtime_hours_worked
FROM
  employees AS e
  LEFT JOIN departments AS d ON e.dept_id = d.dept_id
  LEFT JOIN roles AS r ON e.role_id = r.role_id
  LEFT JOIN salaries AS s ON e.salary_id = s.salary_id
  LEFT JOIN overtime_hours AS oh ON e.overtime_id = oh.overtime_id;
  
  --Test foreign key contraints between employees and department tables
  INSERT INTO employees (first_name, surname, dept_id)
  VALUES
    ('Owethu', 'Sibiya', 6);
